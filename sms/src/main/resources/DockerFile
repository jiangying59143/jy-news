FROM openjdk:8-jdk-alpine

ARG NAME
ARG VERSION
ARG JAR_FILE

LABEL name=$NAME \
      version=$VERSION

# 设定时区
ENV TZ=Asia/Shanghai
RUN set -eux; \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime; \
    echo $TZ > /etc/timezone

# 新建用户 java-app
RUN set -eux; \
    addgroup --gid 1000 java-app; \
    adduser -S -u 1000 -g java-app -h /home/java-app/ -s /bin/sh -D java-app; \
    mkdir -p /home/java-app/lib /home/java-app/etc /home/java-app/jmx-ssl /home/java-app/logs /home/java-app/tmp /home/java-app/jmx-exporter/lib /home/java-app/jmx-exporter/etc; \
    chown -R java-app:java-app /home/java-app

# 导入启动脚本
COPY --chown=java-app:java-app docker-entrypoint.sh /home/java-app/docker-entrypoint.sh
# 赋执行权限RUN ["chmod", "+x", "/home/java-app/docker-entrypoint.sh"]
# 导入 JAR
COPY --chown=java-app:java-app target/${JAR_FILE} /home/java-app/lib/app.jar

USER java-app

# 增加 sh 前导命令, 避免出现权限不足问题
ENTRYPOINT ["/home/java-app/docker-entrypoint.sh"]

# 指定暴露端口, 这样在容器运行时可以知道应该映射哪些端口
EXPOSE 8761

#在容器运行时声明一个 volume, 在容器中的目录为 /tmp
VOLUME /tmp