version: '2.2'

services:

#    eureka:
#        container_name: eurekaServer
#        hostname: eurekaServer
#        build: ./../../eureka
#        networks:
#            - jy-net
#        ports:
#            - "8761:8761"
#        environment:
#            spring.profiles.include: docker
#
#    gateway:
#        container_name: gateway
#        build: ./../../gateway
#        networks:
#            - jy-net
#        ports:
#            - "9999:9999"
#        depends_on:
#          - eureka
#        environment:
#            spring.profiles.include: docker
#
#    sms:
#        container_name: sms
#        build: ./../../sms
#        networks:
#            - jy-net
#        ports:
#            - "8080:8080"
#            - "1081:1081"
#        depends_on:
#          - eureka
#          - gateway
#        environment:
#            spring.profiles.include: docker
#            JAVA_OPTS: # '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:1081'

    zoo1:
        image: zookeeper:3.4.14
        restart: unless-stopped
        hostname: zoo1
        ports:
            - "2181:2181"
        container_name: zookeeper
        networks:
            - jy-net
    kafka1:
        image: wurstmeister/kafka
        hostname: kafka1
        container_name: kafka1
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_HOST_NAME: 192.168.239.172
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.239.172:9092
            KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
            KAFKA_ADVERTISED_PORT: 9092
            KAFKA_BROKER_ID: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
            - zoo1
        networks:
            - jy-net

    kafka2:
        image: wurstmeister/kafka
        hostname: kafka2
        container_name: kafka2
        ports:
            - "9093:9092"
        environment:
            KAFKA_ADVERTISED_HOST_NAME: 192.168.239.172
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.239.172:9093
            KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
            KAFKA_ADVERTISED_PORT: 9093
            KAFKA_BROKER_ID: 2
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
            - zoo1
        networks:
            - jy-net
    kafka-manager:
        image: sheepkiller/kafka-manager              ## 镜像：开源的web管理kafka集群的界面
        environment:
            ZK_HOSTS: zoo1                   ## 修改:宿主机IP
        ports:
            - "9000:9000"                               ## 暴露端口
        networks:
            - jy-net

#    es01:
#        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
#        container_name: es01
#        environment:
#            - node.name=es01
#            - cluster.name=es-docker-cluster
#            - discovery.seed_hosts=es02,es03
#            - cluster.initial_master_nodes=es01,es02,es03
#            - bootstrap.memory_lock=true
#            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#        ulimits:
#            memlock:
#                soft: -1
#                hard: -1
#        volumes:
#            - data01:/usr/share/elasticsearch/data
#        ports:
#            - 9200:9200
#        networks:
#            - jy-net
#    es02:
#        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
#        container_name: es02
#        environment:
#            - node.name=es02
#            - cluster.name=es-docker-cluster
#            - discovery.seed_hosts=es01,es03
#            - cluster.initial_master_nodes=es01,es02,es03
#            - bootstrap.memory_lock=true
#            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#        ulimits:
#            memlock:
#                soft: -1
#                hard: -1
#        volumes:
#            - data02:/usr/share/elasticsearch/data
#        networks:
#            - jy-net
#    es03:
#        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
#        container_name: es03
#        environment:
#            - node.name=es03
#            - cluster.name=es-docker-cluster
#            - discovery.seed_hosts=es01,es02
#            - cluster.initial_master_nodes=es01,es02,es03
#            - bootstrap.memory_lock=true
#            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#        ulimits:
#            memlock:
#                soft: -1
#                hard: -1
#        volumes:
#            - data03:/usr/share/elasticsearch/data
#        networks:
#            - jy-net

volumes:
    data01:
        driver: local
    data02:
        driver: local
    data03:
        driver: local



networks:
    jy-net:
        driver: bridge
